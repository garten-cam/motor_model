function data_table = ICE_import(filename, dataLines)
	%IMPORTFILE Import data from a text file
	%  DINVEHICULAR1_5ON2013_11_18_15_22_02A = IMPORTFILE(FILENAME) reads
	%  data from text file FILENAME for the default selection.  Returns the
	%  data as a table.
	%
	%  DINVEHICULAR1_5ON2013_11_18_15_22_02A = IMPORTFILE(FILE, DATALINES)
	%  reads data for the specified row interval(s) of text file FILENAME.
	%  Specify DATALINES as a positive scalar integer or a N-by-2 array of
	%  positive scalar integers for dis-contiguous row intervals.
	%
	%  Example:
	%  DinVehicular1_5On2013_11_18_15_22_02A = importfile("/home/cgarcia/Documents/ICE_Modelling/data/Din Vehicular 1 #5 on 2013-11-18 @ 15-22-02A.csv", [2, Inf]);
	%
	%  See also READTABLE.
	%
	% Auto-generated by MATLAB on 20-Feb-2025 16:49:06

	%% Input handling

	% If dataLines is not specified, define defaults
	if nargin < 2
		dataLines = [2, Inf];
	end

	%% Set up the Import Options and import the data
	opts = delimitedTextImportOptions("NumVariables", 41);

	% Specify range and delimiter
	opts.DataLines = dataLines;
	opts.Delimiter = ",";

	% Specify column names and types
	opts.VariableNames = ["BoardTime", "EngineRPM_A", "AbsorberRPM_C", "FuelFlow", "EGT_5", "Torque", "LoadCell", "AFR", "Barometer", "Pressure", "Humidity", "RotaryTorque", "KnockSensor", "EGT_1", "EGT_2", "EGT_3", "EGT_4", "EGT_6", "EGT_7", "EGT_8", "RotaryTemp", "EngineTemp", "AirTemp_", "Accelerometer", "PanelKnob_", "HarnessKnob_", "ServoSetPoint", "ConsoleIGNButton", "ConsoleStartButton", "ConsoleFuelButton", "ConsoleWaterButton", "ConsoleBlowerButton", "ConsoleAux1Button", "ConsoleN2OButton", "ConsoleAux3Button", "ServoFeedback_", "SupplyVolts", "AirFlow", "OutgoingDYNOmiteHold", "StoredDebugData", "RecordButtonStatus"];
	opts.SelectedVariableNames = ["BoardTime", "EngineRPM_A", "AbsorberRPM_C", "Torque"];
	opts.VariableTypes = ["double", "double", "double", "string", "string", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string"];

	% Specify file level properties
	opts.ExtraColumnsRule = "ignore";
	opts.EmptyLineRule = "read";

	% Specify variable properties
	opts = setvaropts(opts, ["FuelFlow", "EGT_5", "LoadCell", "AFR", "Barometer", "Pressure", "Humidity", "RotaryTorque", "KnockSensor", "EGT_1", "EGT_2", "EGT_3", "EGT_4", "EGT_6", "EGT_7", "EGT_8", "RotaryTemp", "EngineTemp", "AirTemp_", "Accelerometer", "PanelKnob_", "HarnessKnob_", "ServoSetPoint", "ConsoleIGNButton", "ConsoleStartButton", "ConsoleFuelButton", "ConsoleWaterButton", "ConsoleBlowerButton", "ConsoleAux1Button", "ConsoleN2OButton", "ConsoleAux3Button", "ServoFeedback_", "SupplyVolts", "AirFlow", "OutgoingDYNOmiteHold", "StoredDebugData", "RecordButtonStatus"], "WhitespaceRule", "preserve");
	opts = setvaropts(opts, ["FuelFlow", "EGT_5", "LoadCell", "AFR", "Barometer", "Pressure", "Humidity", "RotaryTorque", "KnockSensor", "EGT_1", "EGT_2", "EGT_3", "EGT_4", "EGT_6", "EGT_7", "EGT_8", "RotaryTemp", "EngineTemp", "AirTemp_", "Accelerometer", "PanelKnob_", "HarnessKnob_", "ServoSetPoint", "ConsoleIGNButton", "ConsoleStartButton", "ConsoleFuelButton", "ConsoleWaterButton", "ConsoleBlowerButton", "ConsoleAux1Button", "ConsoleN2OButton", "ConsoleAux3Button", "ServoFeedback_", "SupplyVolts", "AirFlow", "OutgoingDYNOmiteHold", "StoredDebugData", "RecordButtonStatus"], "EmptyFieldRule", "auto");

	% Import the data
	data_table = readtable(filename, opts);

end